import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

// configuration for all projects
allprojects { p ->
    group 'com.bfa'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'java-library'
    dependencies {
        implementation(
            "org.apache.kafka:connect-api:$kafka_version",
            "org.apache.kafka:kafka-clients:$kafka_version"
        )
        implementation (
            'org.slf4j:slf4j-api:1.7.36',
            'org.apache.logging.log4j:log4j-core:2.17.2',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2',
            'org.apache.commons:commons-lang3:3.12.0'
        )
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testImplementation (
            'org.spockframework:spock-core:2.1-groovy-3.0',
            'cglib:cglib-nodep:3.3.0'
        )
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
        if (p.name != 'core') {
            implementation project(":core")
        }
    }
}
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar
task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}
// pull in sub-project dependencies
dependencies {
    implementation project(':sample')
    implementation project(':kinesis')
}
